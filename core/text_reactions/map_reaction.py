import asyncio
from random import randint

from aiogram import types
from UI.inline_keyboard_buttons import ship_control_buttons
from UI.map_visualizer import update_map_message_of_user
from network import async_messages_operator
from core.vector2 import Vector2
from core.map_list import maps
from models import user
from models.world_objects.ship import Ship
import random

async def map_button_reaction(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ö–∞—Ä—Ç–∞ üó∫
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É
    if message.text == "–ö–∞—Ä—Ç–∞ üó∫":
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_ = user.users_dict[message.chat.id]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —É –∏–≥—Ä–æ–∫–∞ –∫–æ—Ä–∞–±–ª—å
        if user_.controlled_ship == 0:
            player_ship = Ship(position=Vector2(randint(-2, 2), randint(-2, 2)), rotation=0, sprite_name=f'ship {randint(1, 5)}')
            player_ship.register_owner(user_)
            maps[user_.current_map].add_new_object(player_ship)
        else:
            for i in maps:
                for object_ in i.objects:
                    if type(object_) == Ship:
                        if object_.owner.id == user_.id:
                            user_.controlled_ship  =  object_
                            break


        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–∞—Ä—Ç—É –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –∏ –æ—Ç—Å—ã–ª–∞–µ–º –Ω–æ–≤—É—é
        asyncio.create_task(async_messages_operator.try_delete_message(user_.id, user_.map_message_id))
        user_.map_message_id = None
        asyncio.create_task(update_map_message_of_user(user_))
